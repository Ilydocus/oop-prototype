// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: S1Messages.proto

#ifndef PROTOBUF_S1Messages_2eproto__INCLUDED
#define PROTOBUF_S1Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "RrcMessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_S1Messages_2eproto();
void protobuf_AssignDesc_S1Messages_2eproto();
void protobuf_ShutdownFile_S1Messages_2eproto();

class S1Message;
class S1ApInitialUeMessage;
class S1ApInitialContextSetupRequest;
class S1ApInitialContextSetupResponse;

enum S1Message_MessageType {
  S1Message_MessageType_TypeS1ApIUeM = 0,
  S1Message_MessageType_TypeS1ApICSRequest = 1,
  S1Message_MessageType_TypeS1ApICSResponse = 2
};
bool S1Message_MessageType_IsValid(int value);
const S1Message_MessageType S1Message_MessageType_MessageType_MIN = S1Message_MessageType_TypeS1ApIUeM;
const S1Message_MessageType S1Message_MessageType_MessageType_MAX = S1Message_MessageType_TypeS1ApICSResponse;
const int S1Message_MessageType_MessageType_ARRAYSIZE = S1Message_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* S1Message_MessageType_descriptor();
inline const ::std::string& S1Message_MessageType_Name(S1Message_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    S1Message_MessageType_descriptor(), value);
}
inline bool S1Message_MessageType_Parse(
    const ::std::string& name, S1Message_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S1Message_MessageType>(
    S1Message_MessageType_descriptor(), name, value);
}
enum EpsAttachType {
  EpsAttach = 0,
  EpsOther = 1
};
bool EpsAttachType_IsValid(int value);
const EpsAttachType EpsAttachType_MIN = EpsAttach;
const EpsAttachType EpsAttachType_MAX = EpsOther;
const int EpsAttachType_ARRAYSIZE = EpsAttachType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EpsAttachType_descriptor();
inline const ::std::string& EpsAttachType_Name(EpsAttachType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EpsAttachType_descriptor(), value);
}
inline bool EpsAttachType_Parse(
    const ::std::string& name, EpsAttachType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EpsAttachType>(
    EpsAttachType_descriptor(), name, value);
}
// ===================================================================

class S1Message : public ::google::protobuf::Message {
 public:
  S1Message();
  virtual ~S1Message();

  S1Message(const S1Message& from);

  inline S1Message& operator=(const S1Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S1Message& default_instance();

  void Swap(S1Message* other);

  // implements Message ----------------------------------------------

  S1Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S1Message& from);
  void MergeFrom(const S1Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef S1Message_MessageType MessageType;
  static const MessageType TypeS1ApIUeM = S1Message_MessageType_TypeS1ApIUeM;
  static const MessageType TypeS1ApICSRequest = S1Message_MessageType_TypeS1ApICSRequest;
  static const MessageType TypeS1ApICSResponse = S1Message_MessageType_TypeS1ApICSResponse;
  static inline bool MessageType_IsValid(int value) {
    return S1Message_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    S1Message_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    S1Message_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    S1Message_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return S1Message_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return S1Message_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return S1Message_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .S1Message.MessageType messageType = 1;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  inline ::S1Message_MessageType messagetype() const;
  inline void set_messagetype(::S1Message_MessageType value);

  // optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
  inline bool has_messages1apiuem() const;
  inline void clear_messages1apiuem();
  static const int kMessageS1ApIUeMFieldNumber = 2;
  inline const ::S1ApInitialUeMessage& messages1apiuem() const;
  inline ::S1ApInitialUeMessage* mutable_messages1apiuem();
  inline ::S1ApInitialUeMessage* release_messages1apiuem();
  inline void set_allocated_messages1apiuem(::S1ApInitialUeMessage* messages1apiuem);

  // optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
  inline bool has_messages1apicsrequest() const;
  inline void clear_messages1apicsrequest();
  static const int kMessageS1ApICSRequestFieldNumber = 3;
  inline const ::S1ApInitialContextSetupRequest& messages1apicsrequest() const;
  inline ::S1ApInitialContextSetupRequest* mutable_messages1apicsrequest();
  inline ::S1ApInitialContextSetupRequest* release_messages1apicsrequest();
  inline void set_allocated_messages1apicsrequest(::S1ApInitialContextSetupRequest* messages1apicsrequest);

  // optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
  inline bool has_messages1apicsresponse() const;
  inline void clear_messages1apicsresponse();
  static const int kMessageS1ApICSResponseFieldNumber = 4;
  inline const ::S1ApInitialContextSetupResponse& messages1apicsresponse() const;
  inline ::S1ApInitialContextSetupResponse* mutable_messages1apicsresponse();
  inline ::S1ApInitialContextSetupResponse* release_messages1apicsresponse();
  inline void set_allocated_messages1apicsresponse(::S1ApInitialContextSetupResponse* messages1apicsresponse);

  // @@protoc_insertion_point(class_scope:S1Message)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_messages1apiuem();
  inline void clear_has_messages1apiuem();
  inline void set_has_messages1apicsrequest();
  inline void clear_has_messages1apicsrequest();
  inline void set_has_messages1apicsresponse();
  inline void clear_has_messages1apicsresponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::S1ApInitialUeMessage* messages1apiuem_;
  ::S1ApInitialContextSetupRequest* messages1apicsrequest_;
  ::S1ApInitialContextSetupResponse* messages1apicsresponse_;
  int messagetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_S1Messages_2eproto();
  friend void protobuf_AssignDesc_S1Messages_2eproto();
  friend void protobuf_ShutdownFile_S1Messages_2eproto();

  void InitAsDefaultInstance();
  static S1Message* default_instance_;
};
// -------------------------------------------------------------------

class S1ApInitialUeMessage : public ::google::protobuf::Message {
 public:
  S1ApInitialUeMessage();
  virtual ~S1ApInitialUeMessage();

  S1ApInitialUeMessage(const S1ApInitialUeMessage& from);

  inline S1ApInitialUeMessage& operator=(const S1ApInitialUeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S1ApInitialUeMessage& default_instance();

  void Swap(S1ApInitialUeMessage* other);

  // implements Message ----------------------------------------------

  S1ApInitialUeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S1ApInitialUeMessage& from);
  void MergeFrom(const S1ApInitialUeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 enb_Ue_S1Ap_Id = 1;
  inline bool has_enb_ue_s1ap_id() const;
  inline void clear_enb_ue_s1ap_id();
  static const int kEnbUeS1ApIdFieldNumber = 1;
  inline ::google::protobuf::int64 enb_ue_s1ap_id() const;
  inline void set_enb_ue_s1ap_id(::google::protobuf::int64 value);

  // required .EpsAttachType epsAttachType = 2;
  inline bool has_epsattachtype() const;
  inline void clear_epsattachtype();
  static const int kEpsAttachTypeFieldNumber = 2;
  inline ::EpsAttachType epsattachtype() const;
  inline void set_epsattachtype(::EpsAttachType value);

  // required .Imsi_message identity = 3;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 3;
  inline const ::Imsi_message& identity() const;
  inline ::Imsi_message* mutable_identity();
  inline ::Imsi_message* release_identity();
  inline void set_allocated_identity(::Imsi_message* identity);

  // @@protoc_insertion_point(class_scope:S1ApInitialUeMessage)
 private:
  inline void set_has_enb_ue_s1ap_id();
  inline void clear_has_enb_ue_s1ap_id();
  inline void set_has_epsattachtype();
  inline void clear_has_epsattachtype();
  inline void set_has_identity();
  inline void clear_has_identity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 enb_ue_s1ap_id_;
  ::Imsi_message* identity_;
  int epsattachtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_S1Messages_2eproto();
  friend void protobuf_AssignDesc_S1Messages_2eproto();
  friend void protobuf_ShutdownFile_S1Messages_2eproto();

  void InitAsDefaultInstance();
  static S1ApInitialUeMessage* default_instance_;
};
// -------------------------------------------------------------------

class S1ApInitialContextSetupRequest : public ::google::protobuf::Message {
 public:
  S1ApInitialContextSetupRequest();
  virtual ~S1ApInitialContextSetupRequest();

  S1ApInitialContextSetupRequest(const S1ApInitialContextSetupRequest& from);

  inline S1ApInitialContextSetupRequest& operator=(const S1ApInitialContextSetupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S1ApInitialContextSetupRequest& default_instance();

  void Swap(S1ApInitialContextSetupRequest* other);

  // implements Message ----------------------------------------------

  S1ApInitialContextSetupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S1ApInitialContextSetupRequest& from);
  void MergeFrom(const S1ApInitialContextSetupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 mme_Ue_S1Ap_Id = 1;
  inline bool has_mme_ue_s1ap_id() const;
  inline void clear_mme_ue_s1ap_id();
  static const int kMmeUeS1ApIdFieldNumber = 1;
  inline ::google::protobuf::int64 mme_ue_s1ap_id() const;
  inline void set_mme_ue_s1ap_id(::google::protobuf::int64 value);

  // required int64 enb_Ue_S1Ap_Id = 2;
  inline bool has_enb_ue_s1ap_id() const;
  inline void clear_enb_ue_s1ap_id();
  static const int kEnbUeS1ApIdFieldNumber = 2;
  inline ::google::protobuf::int64 enb_ue_s1ap_id() const;
  inline void set_enb_ue_s1ap_id(::google::protobuf::int64 value);

  // required int64 securityKey = 3;
  inline bool has_securitykey() const;
  inline void clear_securitykey();
  static const int kSecurityKeyFieldNumber = 3;
  inline ::google::protobuf::int64 securitykey() const;
  inline void set_securitykey(::google::protobuf::int64 value);

  // required string epsBearerId = 4;
  inline bool has_epsbearerid() const;
  inline void clear_epsbearerid();
  static const int kEpsBearerIdFieldNumber = 4;
  inline const ::std::string& epsbearerid() const;
  inline void set_epsbearerid(const ::std::string& value);
  inline void set_epsbearerid(const char* value);
  inline void set_epsbearerid(const char* value, size_t size);
  inline ::std::string* mutable_epsbearerid();
  inline ::std::string* release_epsbearerid();
  inline void set_allocated_epsbearerid(::std::string* epsbearerid);

  // @@protoc_insertion_point(class_scope:S1ApInitialContextSetupRequest)
 private:
  inline void set_has_mme_ue_s1ap_id();
  inline void clear_has_mme_ue_s1ap_id();
  inline void set_has_enb_ue_s1ap_id();
  inline void clear_has_enb_ue_s1ap_id();
  inline void set_has_securitykey();
  inline void clear_has_securitykey();
  inline void set_has_epsbearerid();
  inline void clear_has_epsbearerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mme_ue_s1ap_id_;
  ::google::protobuf::int64 enb_ue_s1ap_id_;
  ::google::protobuf::int64 securitykey_;
  ::std::string* epsbearerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_S1Messages_2eproto();
  friend void protobuf_AssignDesc_S1Messages_2eproto();
  friend void protobuf_ShutdownFile_S1Messages_2eproto();

  void InitAsDefaultInstance();
  static S1ApInitialContextSetupRequest* default_instance_;
};
// -------------------------------------------------------------------

class S1ApInitialContextSetupResponse : public ::google::protobuf::Message {
 public:
  S1ApInitialContextSetupResponse();
  virtual ~S1ApInitialContextSetupResponse();

  S1ApInitialContextSetupResponse(const S1ApInitialContextSetupResponse& from);

  inline S1ApInitialContextSetupResponse& operator=(const S1ApInitialContextSetupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S1ApInitialContextSetupResponse& default_instance();

  void Swap(S1ApInitialContextSetupResponse* other);

  // implements Message ----------------------------------------------

  S1ApInitialContextSetupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S1ApInitialContextSetupResponse& from);
  void MergeFrom(const S1ApInitialContextSetupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 enb_Ue_S1Ap_Id = 1;
  inline bool has_enb_ue_s1ap_id() const;
  inline void clear_enb_ue_s1ap_id();
  static const int kEnbUeS1ApIdFieldNumber = 1;
  inline ::google::protobuf::int64 enb_ue_s1ap_id() const;
  inline void set_enb_ue_s1ap_id(::google::protobuf::int64 value);

  // required string eRabId = 2;
  inline bool has_erabid() const;
  inline void clear_erabid();
  static const int kERabIdFieldNumber = 2;
  inline const ::std::string& erabid() const;
  inline void set_erabid(const ::std::string& value);
  inline void set_erabid(const char* value);
  inline void set_erabid(const char* value, size_t size);
  inline ::std::string* mutable_erabid();
  inline ::std::string* release_erabid();
  inline void set_allocated_erabid(::std::string* erabid);

  // @@protoc_insertion_point(class_scope:S1ApInitialContextSetupResponse)
 private:
  inline void set_has_enb_ue_s1ap_id();
  inline void clear_has_enb_ue_s1ap_id();
  inline void set_has_erabid();
  inline void clear_has_erabid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 enb_ue_s1ap_id_;
  ::std::string* erabid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S1Messages_2eproto();
  friend void protobuf_AssignDesc_S1Messages_2eproto();
  friend void protobuf_ShutdownFile_S1Messages_2eproto();

  void InitAsDefaultInstance();
  static S1ApInitialContextSetupResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// S1Message

// required .S1Message.MessageType messageType = 1;
inline bool S1Message::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S1Message::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S1Message::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S1Message::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::S1Message_MessageType S1Message::messagetype() const {
  return static_cast< ::S1Message_MessageType >(messagetype_);
}
inline void S1Message::set_messagetype(::S1Message_MessageType value) {
  assert(::S1Message_MessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
}

// optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
inline bool S1Message::has_messages1apiuem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S1Message::set_has_messages1apiuem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S1Message::clear_has_messages1apiuem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S1Message::clear_messages1apiuem() {
  if (messages1apiuem_ != NULL) messages1apiuem_->::S1ApInitialUeMessage::Clear();
  clear_has_messages1apiuem();
}
inline const ::S1ApInitialUeMessage& S1Message::messages1apiuem() const {
  return messages1apiuem_ != NULL ? *messages1apiuem_ : *default_instance_->messages1apiuem_;
}
inline ::S1ApInitialUeMessage* S1Message::mutable_messages1apiuem() {
  set_has_messages1apiuem();
  if (messages1apiuem_ == NULL) messages1apiuem_ = new ::S1ApInitialUeMessage;
  return messages1apiuem_;
}
inline ::S1ApInitialUeMessage* S1Message::release_messages1apiuem() {
  clear_has_messages1apiuem();
  ::S1ApInitialUeMessage* temp = messages1apiuem_;
  messages1apiuem_ = NULL;
  return temp;
}
inline void S1Message::set_allocated_messages1apiuem(::S1ApInitialUeMessage* messages1apiuem) {
  delete messages1apiuem_;
  messages1apiuem_ = messages1apiuem;
  if (messages1apiuem) {
    set_has_messages1apiuem();
  } else {
    clear_has_messages1apiuem();
  }
}

// optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
inline bool S1Message::has_messages1apicsrequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S1Message::set_has_messages1apicsrequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S1Message::clear_has_messages1apicsrequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S1Message::clear_messages1apicsrequest() {
  if (messages1apicsrequest_ != NULL) messages1apicsrequest_->::S1ApInitialContextSetupRequest::Clear();
  clear_has_messages1apicsrequest();
}
inline const ::S1ApInitialContextSetupRequest& S1Message::messages1apicsrequest() const {
  return messages1apicsrequest_ != NULL ? *messages1apicsrequest_ : *default_instance_->messages1apicsrequest_;
}
inline ::S1ApInitialContextSetupRequest* S1Message::mutable_messages1apicsrequest() {
  set_has_messages1apicsrequest();
  if (messages1apicsrequest_ == NULL) messages1apicsrequest_ = new ::S1ApInitialContextSetupRequest;
  return messages1apicsrequest_;
}
inline ::S1ApInitialContextSetupRequest* S1Message::release_messages1apicsrequest() {
  clear_has_messages1apicsrequest();
  ::S1ApInitialContextSetupRequest* temp = messages1apicsrequest_;
  messages1apicsrequest_ = NULL;
  return temp;
}
inline void S1Message::set_allocated_messages1apicsrequest(::S1ApInitialContextSetupRequest* messages1apicsrequest) {
  delete messages1apicsrequest_;
  messages1apicsrequest_ = messages1apicsrequest;
  if (messages1apicsrequest) {
    set_has_messages1apicsrequest();
  } else {
    clear_has_messages1apicsrequest();
  }
}

// optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
inline bool S1Message::has_messages1apicsresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S1Message::set_has_messages1apicsresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S1Message::clear_has_messages1apicsresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S1Message::clear_messages1apicsresponse() {
  if (messages1apicsresponse_ != NULL) messages1apicsresponse_->::S1ApInitialContextSetupResponse::Clear();
  clear_has_messages1apicsresponse();
}
inline const ::S1ApInitialContextSetupResponse& S1Message::messages1apicsresponse() const {
  return messages1apicsresponse_ != NULL ? *messages1apicsresponse_ : *default_instance_->messages1apicsresponse_;
}
inline ::S1ApInitialContextSetupResponse* S1Message::mutable_messages1apicsresponse() {
  set_has_messages1apicsresponse();
  if (messages1apicsresponse_ == NULL) messages1apicsresponse_ = new ::S1ApInitialContextSetupResponse;
  return messages1apicsresponse_;
}
inline ::S1ApInitialContextSetupResponse* S1Message::release_messages1apicsresponse() {
  clear_has_messages1apicsresponse();
  ::S1ApInitialContextSetupResponse* temp = messages1apicsresponse_;
  messages1apicsresponse_ = NULL;
  return temp;
}
inline void S1Message::set_allocated_messages1apicsresponse(::S1ApInitialContextSetupResponse* messages1apicsresponse) {
  delete messages1apicsresponse_;
  messages1apicsresponse_ = messages1apicsresponse;
  if (messages1apicsresponse) {
    set_has_messages1apicsresponse();
  } else {
    clear_has_messages1apicsresponse();
  }
}

// -------------------------------------------------------------------

// S1ApInitialUeMessage

// required int64 enb_Ue_S1Ap_Id = 1;
inline bool S1ApInitialUeMessage::has_enb_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S1ApInitialUeMessage::set_has_enb_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S1ApInitialUeMessage::clear_has_enb_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S1ApInitialUeMessage::clear_enb_ue_s1ap_id() {
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  clear_has_enb_ue_s1ap_id();
}
inline ::google::protobuf::int64 S1ApInitialUeMessage::enb_ue_s1ap_id() const {
  return enb_ue_s1ap_id_;
}
inline void S1ApInitialUeMessage::set_enb_ue_s1ap_id(::google::protobuf::int64 value) {
  set_has_enb_ue_s1ap_id();
  enb_ue_s1ap_id_ = value;
}

// required .EpsAttachType epsAttachType = 2;
inline bool S1ApInitialUeMessage::has_epsattachtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S1ApInitialUeMessage::set_has_epsattachtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S1ApInitialUeMessage::clear_has_epsattachtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S1ApInitialUeMessage::clear_epsattachtype() {
  epsattachtype_ = 0;
  clear_has_epsattachtype();
}
inline ::EpsAttachType S1ApInitialUeMessage::epsattachtype() const {
  return static_cast< ::EpsAttachType >(epsattachtype_);
}
inline void S1ApInitialUeMessage::set_epsattachtype(::EpsAttachType value) {
  assert(::EpsAttachType_IsValid(value));
  set_has_epsattachtype();
  epsattachtype_ = value;
}

// required .Imsi_message identity = 3;
inline bool S1ApInitialUeMessage::has_identity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S1ApInitialUeMessage::set_has_identity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S1ApInitialUeMessage::clear_has_identity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S1ApInitialUeMessage::clear_identity() {
  if (identity_ != NULL) identity_->::Imsi_message::Clear();
  clear_has_identity();
}
inline const ::Imsi_message& S1ApInitialUeMessage::identity() const {
  return identity_ != NULL ? *identity_ : *default_instance_->identity_;
}
inline ::Imsi_message* S1ApInitialUeMessage::mutable_identity() {
  set_has_identity();
  if (identity_ == NULL) identity_ = new ::Imsi_message;
  return identity_;
}
inline ::Imsi_message* S1ApInitialUeMessage::release_identity() {
  clear_has_identity();
  ::Imsi_message* temp = identity_;
  identity_ = NULL;
  return temp;
}
inline void S1ApInitialUeMessage::set_allocated_identity(::Imsi_message* identity) {
  delete identity_;
  identity_ = identity;
  if (identity) {
    set_has_identity();
  } else {
    clear_has_identity();
  }
}

// -------------------------------------------------------------------

// S1ApInitialContextSetupRequest

// required int64 mme_Ue_S1Ap_Id = 1;
inline bool S1ApInitialContextSetupRequest::has_mme_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S1ApInitialContextSetupRequest::set_has_mme_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S1ApInitialContextSetupRequest::clear_has_mme_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S1ApInitialContextSetupRequest::clear_mme_ue_s1ap_id() {
  mme_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  clear_has_mme_ue_s1ap_id();
}
inline ::google::protobuf::int64 S1ApInitialContextSetupRequest::mme_ue_s1ap_id() const {
  return mme_ue_s1ap_id_;
}
inline void S1ApInitialContextSetupRequest::set_mme_ue_s1ap_id(::google::protobuf::int64 value) {
  set_has_mme_ue_s1ap_id();
  mme_ue_s1ap_id_ = value;
}

// required int64 enb_Ue_S1Ap_Id = 2;
inline bool S1ApInitialContextSetupRequest::has_enb_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S1ApInitialContextSetupRequest::set_has_enb_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S1ApInitialContextSetupRequest::clear_has_enb_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S1ApInitialContextSetupRequest::clear_enb_ue_s1ap_id() {
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  clear_has_enb_ue_s1ap_id();
}
inline ::google::protobuf::int64 S1ApInitialContextSetupRequest::enb_ue_s1ap_id() const {
  return enb_ue_s1ap_id_;
}
inline void S1ApInitialContextSetupRequest::set_enb_ue_s1ap_id(::google::protobuf::int64 value) {
  set_has_enb_ue_s1ap_id();
  enb_ue_s1ap_id_ = value;
}

// required int64 securityKey = 3;
inline bool S1ApInitialContextSetupRequest::has_securitykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S1ApInitialContextSetupRequest::set_has_securitykey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S1ApInitialContextSetupRequest::clear_has_securitykey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S1ApInitialContextSetupRequest::clear_securitykey() {
  securitykey_ = GOOGLE_LONGLONG(0);
  clear_has_securitykey();
}
inline ::google::protobuf::int64 S1ApInitialContextSetupRequest::securitykey() const {
  return securitykey_;
}
inline void S1ApInitialContextSetupRequest::set_securitykey(::google::protobuf::int64 value) {
  set_has_securitykey();
  securitykey_ = value;
}

// required string epsBearerId = 4;
inline bool S1ApInitialContextSetupRequest::has_epsbearerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S1ApInitialContextSetupRequest::set_has_epsbearerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S1ApInitialContextSetupRequest::clear_has_epsbearerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S1ApInitialContextSetupRequest::clear_epsbearerid() {
  if (epsbearerid_ != &::google::protobuf::internal::kEmptyString) {
    epsbearerid_->clear();
  }
  clear_has_epsbearerid();
}
inline const ::std::string& S1ApInitialContextSetupRequest::epsbearerid() const {
  return *epsbearerid_;
}
inline void S1ApInitialContextSetupRequest::set_epsbearerid(const ::std::string& value) {
  set_has_epsbearerid();
  if (epsbearerid_ == &::google::protobuf::internal::kEmptyString) {
    epsbearerid_ = new ::std::string;
  }
  epsbearerid_->assign(value);
}
inline void S1ApInitialContextSetupRequest::set_epsbearerid(const char* value) {
  set_has_epsbearerid();
  if (epsbearerid_ == &::google::protobuf::internal::kEmptyString) {
    epsbearerid_ = new ::std::string;
  }
  epsbearerid_->assign(value);
}
inline void S1ApInitialContextSetupRequest::set_epsbearerid(const char* value, size_t size) {
  set_has_epsbearerid();
  if (epsbearerid_ == &::google::protobuf::internal::kEmptyString) {
    epsbearerid_ = new ::std::string;
  }
  epsbearerid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S1ApInitialContextSetupRequest::mutable_epsbearerid() {
  set_has_epsbearerid();
  if (epsbearerid_ == &::google::protobuf::internal::kEmptyString) {
    epsbearerid_ = new ::std::string;
  }
  return epsbearerid_;
}
inline ::std::string* S1ApInitialContextSetupRequest::release_epsbearerid() {
  clear_has_epsbearerid();
  if (epsbearerid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = epsbearerid_;
    epsbearerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S1ApInitialContextSetupRequest::set_allocated_epsbearerid(::std::string* epsbearerid) {
  if (epsbearerid_ != &::google::protobuf::internal::kEmptyString) {
    delete epsbearerid_;
  }
  if (epsbearerid) {
    set_has_epsbearerid();
    epsbearerid_ = epsbearerid;
  } else {
    clear_has_epsbearerid();
    epsbearerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S1ApInitialContextSetupResponse

// required int64 enb_Ue_S1Ap_Id = 1;
inline bool S1ApInitialContextSetupResponse::has_enb_ue_s1ap_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S1ApInitialContextSetupResponse::set_has_enb_ue_s1ap_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S1ApInitialContextSetupResponse::clear_has_enb_ue_s1ap_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S1ApInitialContextSetupResponse::clear_enb_ue_s1ap_id() {
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  clear_has_enb_ue_s1ap_id();
}
inline ::google::protobuf::int64 S1ApInitialContextSetupResponse::enb_ue_s1ap_id() const {
  return enb_ue_s1ap_id_;
}
inline void S1ApInitialContextSetupResponse::set_enb_ue_s1ap_id(::google::protobuf::int64 value) {
  set_has_enb_ue_s1ap_id();
  enb_ue_s1ap_id_ = value;
}

// required string eRabId = 2;
inline bool S1ApInitialContextSetupResponse::has_erabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S1ApInitialContextSetupResponse::set_has_erabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S1ApInitialContextSetupResponse::clear_has_erabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S1ApInitialContextSetupResponse::clear_erabid() {
  if (erabid_ != &::google::protobuf::internal::kEmptyString) {
    erabid_->clear();
  }
  clear_has_erabid();
}
inline const ::std::string& S1ApInitialContextSetupResponse::erabid() const {
  return *erabid_;
}
inline void S1ApInitialContextSetupResponse::set_erabid(const ::std::string& value) {
  set_has_erabid();
  if (erabid_ == &::google::protobuf::internal::kEmptyString) {
    erabid_ = new ::std::string;
  }
  erabid_->assign(value);
}
inline void S1ApInitialContextSetupResponse::set_erabid(const char* value) {
  set_has_erabid();
  if (erabid_ == &::google::protobuf::internal::kEmptyString) {
    erabid_ = new ::std::string;
  }
  erabid_->assign(value);
}
inline void S1ApInitialContextSetupResponse::set_erabid(const char* value, size_t size) {
  set_has_erabid();
  if (erabid_ == &::google::protobuf::internal::kEmptyString) {
    erabid_ = new ::std::string;
  }
  erabid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S1ApInitialContextSetupResponse::mutable_erabid() {
  set_has_erabid();
  if (erabid_ == &::google::protobuf::internal::kEmptyString) {
    erabid_ = new ::std::string;
  }
  return erabid_;
}
inline ::std::string* S1ApInitialContextSetupResponse::release_erabid() {
  clear_has_erabid();
  if (erabid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = erabid_;
    erabid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S1ApInitialContextSetupResponse::set_allocated_erabid(::std::string* erabid) {
  if (erabid_ != &::google::protobuf::internal::kEmptyString) {
    delete erabid_;
  }
  if (erabid) {
    set_has_erabid();
    erabid_ = erabid;
  } else {
    clear_has_erabid();
    erabid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S1Message_MessageType>() {
  return ::S1Message_MessageType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EpsAttachType>() {
  return ::EpsAttachType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_S1Messages_2eproto__INCLUDED
