// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RrcMessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RrcMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RrcMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RrcMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RrcMessage_MessageType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RaPreamble_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RaPreamble_reflection_ = NULL;
const ::google::protobuf::Descriptor* RaResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RaResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UeIdRntiType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RrcMessages_2eproto() {
  protobuf_AddDesc_RrcMessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RrcMessages.proto");
  GOOGLE_CHECK(file != NULL);
  RrcMessage_descriptor_ = file->message_type(0);
  static const int RrcMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RrcMessage, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RrcMessage, messagerap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RrcMessage, messagerar_),
  };
  RrcMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RrcMessage_descriptor_,
      RrcMessage::default_instance_,
      RrcMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RrcMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RrcMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RrcMessage));
  RrcMessage_MessageType_descriptor_ = RrcMessage_descriptor_->enum_type(0);
  RaPreamble_descriptor_ = file->message_type(1);
  static const int RaPreamble_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaPreamble, ueidrntitype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaPreamble, ueidrntivalue_),
  };
  RaPreamble_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RaPreamble_descriptor_,
      RaPreamble::default_instance_,
      RaPreamble_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaPreamble, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaPreamble, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RaPreamble));
  RaResponse_descriptor_ = file->message_type(2);
  static const int RaResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaResponse, ueidrntitype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaResponse, ueidrntivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaResponse, ueidcrnti_),
  };
  RaResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RaResponse_descriptor_,
      RaResponse::default_instance_,
      RaResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RaResponse));
  UeIdRntiType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RrcMessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RrcMessage_descriptor_, &RrcMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RaPreamble_descriptor_, &RaPreamble::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RaResponse_descriptor_, &RaResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RrcMessages_2eproto() {
  delete RrcMessage::default_instance_;
  delete RrcMessage_reflection_;
  delete RaPreamble::default_instance_;
  delete RaPreamble_reflection_;
  delete RaResponse::default_instance_;
  delete RaResponse_reflection_;
}

void protobuf_AddDesc_RrcMessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021RrcMessages.proto\"\263\001\n\nRrcMessage\022,\n\013me"
    "ssageType\030\001 \002(\0162\027.RrcMessage.MessageType"
    "\022\037\n\nmessageRaP\030\002 \001(\0132\013.RaPreamble\022\037\n\nmes"
    "sageRaR\030\003 \001(\0132\013.RaResponse\"5\n\013MessageTyp"
    "e\022\022\n\016TypeRaPreamble\020\000\022\022\n\016TypeRaResponse\020"
    "\001\"H\n\nRaPreamble\022#\n\014ueIdRntiType\030\001 \002(\0162\r."
    "UeIdRntiType\022\025\n\rueIdRntiValue\030\002 \002(\003\"[\n\nR"
    "aResponse\022#\n\014ueIdRntiType\030\001 \002(\0162\r.UeIdRn"
    "tiType\022\025\n\rueIdRntiValue\030\002 \002(\003\022\021\n\tueIdCRn"
    "ti\030\003 \002(\003*\'\n\014UeIdRntiType\022\013\n\007RA_RNTI\020\000\022\n\n"
    "\006C_RNTI\020\001", 409);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RrcMessages.proto", &protobuf_RegisterTypes);
  RrcMessage::default_instance_ = new RrcMessage();
  RaPreamble::default_instance_ = new RaPreamble();
  RaResponse::default_instance_ = new RaResponse();
  RrcMessage::default_instance_->InitAsDefaultInstance();
  RaPreamble::default_instance_->InitAsDefaultInstance();
  RaResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RrcMessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RrcMessages_2eproto {
  StaticDescriptorInitializer_RrcMessages_2eproto() {
    protobuf_AddDesc_RrcMessages_2eproto();
  }
} static_descriptor_initializer_RrcMessages_2eproto_;
const ::google::protobuf::EnumDescriptor* UeIdRntiType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UeIdRntiType_descriptor_;
}
bool UeIdRntiType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RrcMessage_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RrcMessage_MessageType_descriptor_;
}
bool RrcMessage_MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RrcMessage_MessageType RrcMessage::TypeRaPreamble;
const RrcMessage_MessageType RrcMessage::TypeRaResponse;
const RrcMessage_MessageType RrcMessage::MessageType_MIN;
const RrcMessage_MessageType RrcMessage::MessageType_MAX;
const int RrcMessage::MessageType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RrcMessage::kMessageTypeFieldNumber;
const int RrcMessage::kMessageRaPFieldNumber;
const int RrcMessage::kMessageRaRFieldNumber;
#endif  // !_MSC_VER

RrcMessage::RrcMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RrcMessage::InitAsDefaultInstance() {
  messagerap_ = const_cast< ::RaPreamble*>(&::RaPreamble::default_instance());
  messagerar_ = const_cast< ::RaResponse*>(&::RaResponse::default_instance());
}

RrcMessage::RrcMessage(const RrcMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RrcMessage::SharedCtor() {
  _cached_size_ = 0;
  messagetype_ = 0;
  messagerap_ = NULL;
  messagerar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RrcMessage::~RrcMessage() {
  SharedDtor();
}

void RrcMessage::SharedDtor() {
  if (this != default_instance_) {
    delete messagerap_;
    delete messagerar_;
  }
}

void RrcMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RrcMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RrcMessage_descriptor_;
}

const RrcMessage& RrcMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RrcMessages_2eproto();
  return *default_instance_;
}

RrcMessage* RrcMessage::default_instance_ = NULL;

RrcMessage* RrcMessage::New() const {
  return new RrcMessage;
}

void RrcMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    messagetype_ = 0;
    if (has_messagerap()) {
      if (messagerap_ != NULL) messagerap_->::RaPreamble::Clear();
    }
    if (has_messagerar()) {
      if (messagerar_ != NULL) messagerar_->::RaResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RrcMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RrcMessage.MessageType messageType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RrcMessage_MessageType_IsValid(value)) {
            set_messagetype(static_cast< ::RrcMessage_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_messageRaP;
        break;
      }

      // optional .RaPreamble messageRaP = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messageRaP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messagerap()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_messageRaR;
        break;
      }

      // optional .RaResponse messageRaR = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messageRaR:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messagerar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RrcMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .RrcMessage.MessageType messageType = 1;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // optional .RaPreamble messageRaP = 2;
  if (has_messagerap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->messagerap(), output);
  }

  // optional .RaResponse messageRaR = 3;
  if (has_messagerar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->messagerar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RrcMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .RrcMessage.MessageType messageType = 1;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // optional .RaPreamble messageRaP = 2;
  if (has_messagerap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->messagerap(), target);
  }

  // optional .RaResponse messageRaR = 3;
  if (has_messagerar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->messagerar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RrcMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RrcMessage.MessageType messageType = 1;
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
    }

    // optional .RaPreamble messageRaP = 2;
    if (has_messagerap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messagerap());
    }

    // optional .RaResponse messageRaR = 3;
    if (has_messagerar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messagerar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RrcMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RrcMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RrcMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RrcMessage::MergeFrom(const RrcMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_messagerap()) {
      mutable_messagerap()->::RaPreamble::MergeFrom(from.messagerap());
    }
    if (from.has_messagerar()) {
      mutable_messagerar()->::RaResponse::MergeFrom(from.messagerar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RrcMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RrcMessage::CopyFrom(const RrcMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RrcMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_messagerap()) {
    if (!this->messagerap().IsInitialized()) return false;
  }
  if (has_messagerar()) {
    if (!this->messagerar().IsInitialized()) return false;
  }
  return true;
}

void RrcMessage::Swap(RrcMessage* other) {
  if (other != this) {
    std::swap(messagetype_, other->messagetype_);
    std::swap(messagerap_, other->messagerap_);
    std::swap(messagerar_, other->messagerar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RrcMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RrcMessage_descriptor_;
  metadata.reflection = RrcMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RaPreamble::kUeIdRntiTypeFieldNumber;
const int RaPreamble::kUeIdRntiValueFieldNumber;
#endif  // !_MSC_VER

RaPreamble::RaPreamble()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RaPreamble::InitAsDefaultInstance() {
}

RaPreamble::RaPreamble(const RaPreamble& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RaPreamble::SharedCtor() {
  _cached_size_ = 0;
  ueidrntitype_ = 0;
  ueidrntivalue_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RaPreamble::~RaPreamble() {
  SharedDtor();
}

void RaPreamble::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RaPreamble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RaPreamble::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RaPreamble_descriptor_;
}

const RaPreamble& RaPreamble::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RrcMessages_2eproto();
  return *default_instance_;
}

RaPreamble* RaPreamble::default_instance_ = NULL;

RaPreamble* RaPreamble::New() const {
  return new RaPreamble;
}

void RaPreamble::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ueidrntitype_ = 0;
    ueidrntivalue_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RaPreamble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UeIdRntiType ueIdRntiType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::UeIdRntiType_IsValid(value)) {
            set_ueidrntitype(static_cast< ::UeIdRntiType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ueIdRntiValue;
        break;
      }

      // required int64 ueIdRntiValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ueIdRntiValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ueidrntivalue_)));
          set_has_ueidrntivalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RaPreamble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .UeIdRntiType ueIdRntiType = 1;
  if (has_ueidrntitype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ueidrntitype(), output);
  }

  // required int64 ueIdRntiValue = 2;
  if (has_ueidrntivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ueidrntivalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RaPreamble::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .UeIdRntiType ueIdRntiType = 1;
  if (has_ueidrntitype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ueidrntitype(), target);
  }

  // required int64 ueIdRntiValue = 2;
  if (has_ueidrntivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ueidrntivalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RaPreamble::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .UeIdRntiType ueIdRntiType = 1;
    if (has_ueidrntitype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ueidrntitype());
    }

    // required int64 ueIdRntiValue = 2;
    if (has_ueidrntivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ueidrntivalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RaPreamble::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RaPreamble* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RaPreamble*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RaPreamble::MergeFrom(const RaPreamble& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ueidrntitype()) {
      set_ueidrntitype(from.ueidrntitype());
    }
    if (from.has_ueidrntivalue()) {
      set_ueidrntivalue(from.ueidrntivalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RaPreamble::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaPreamble::CopyFrom(const RaPreamble& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaPreamble::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RaPreamble::Swap(RaPreamble* other) {
  if (other != this) {
    std::swap(ueidrntitype_, other->ueidrntitype_);
    std::swap(ueidrntivalue_, other->ueidrntivalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RaPreamble::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RaPreamble_descriptor_;
  metadata.reflection = RaPreamble_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RaResponse::kUeIdRntiTypeFieldNumber;
const int RaResponse::kUeIdRntiValueFieldNumber;
const int RaResponse::kUeIdCRntiFieldNumber;
#endif  // !_MSC_VER

RaResponse::RaResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RaResponse::InitAsDefaultInstance() {
}

RaResponse::RaResponse(const RaResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RaResponse::SharedCtor() {
  _cached_size_ = 0;
  ueidrntitype_ = 0;
  ueidrntivalue_ = GOOGLE_LONGLONG(0);
  ueidcrnti_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RaResponse::~RaResponse() {
  SharedDtor();
}

void RaResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RaResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RaResponse_descriptor_;
}

const RaResponse& RaResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RrcMessages_2eproto();
  return *default_instance_;
}

RaResponse* RaResponse::default_instance_ = NULL;

RaResponse* RaResponse::New() const {
  return new RaResponse;
}

void RaResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ueidrntitype_ = 0;
    ueidrntivalue_ = GOOGLE_LONGLONG(0);
    ueidcrnti_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UeIdRntiType ueIdRntiType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::UeIdRntiType_IsValid(value)) {
            set_ueidrntitype(static_cast< ::UeIdRntiType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ueIdRntiValue;
        break;
      }

      // required int64 ueIdRntiValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ueIdRntiValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ueidrntivalue_)));
          set_has_ueidrntivalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ueIdCRnti;
        break;
      }

      // required int64 ueIdCRnti = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ueIdCRnti:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ueidcrnti_)));
          set_has_ueidcrnti();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .UeIdRntiType ueIdRntiType = 1;
  if (has_ueidrntitype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ueidrntitype(), output);
  }

  // required int64 ueIdRntiValue = 2;
  if (has_ueidrntivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ueidrntivalue(), output);
  }

  // required int64 ueIdCRnti = 3;
  if (has_ueidcrnti()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ueidcrnti(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RaResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .UeIdRntiType ueIdRntiType = 1;
  if (has_ueidrntitype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ueidrntitype(), target);
  }

  // required int64 ueIdRntiValue = 2;
  if (has_ueidrntivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ueidrntivalue(), target);
  }

  // required int64 ueIdCRnti = 3;
  if (has_ueidcrnti()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ueidcrnti(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RaResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .UeIdRntiType ueIdRntiType = 1;
    if (has_ueidrntitype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ueidrntitype());
    }

    // required int64 ueIdRntiValue = 2;
    if (has_ueidrntivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ueidrntivalue());
    }

    // required int64 ueIdCRnti = 3;
    if (has_ueidcrnti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ueidcrnti());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RaResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RaResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RaResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RaResponse::MergeFrom(const RaResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ueidrntitype()) {
      set_ueidrntitype(from.ueidrntitype());
    }
    if (from.has_ueidrntivalue()) {
      set_ueidrntivalue(from.ueidrntivalue());
    }
    if (from.has_ueidcrnti()) {
      set_ueidcrnti(from.ueidcrnti());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RaResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaResponse::CopyFrom(const RaResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RaResponse::Swap(RaResponse* other) {
  if (other != this) {
    std::swap(ueidrntitype_, other->ueidrntitype_);
    std::swap(ueidrntivalue_, other->ueidrntivalue_);
    std::swap(ueidcrnti_, other->ueidcrnti_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RaResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RaResponse_descriptor_;
  metadata.reflection = RaResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
