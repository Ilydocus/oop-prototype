// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: S1Messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "S1Messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* S1Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S1Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* S1Message_MessageType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* S1ApInitialUeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S1ApInitialUeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* S1ApInitialContextSetupRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S1ApInitialContextSetupRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* S1ApInitialContextSetupResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S1ApInitialContextSetupResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EpsAttachType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_S1Messages_2eproto() {
  protobuf_AddDesc_S1Messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "S1Messages.proto");
  GOOGLE_CHECK(file != NULL);
  S1Message_descriptor_ = file->message_type(0);
  static const int S1Message_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, messages1apiuem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, messages1apicsrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, messages1apicsresponse_),
  };
  S1Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S1Message_descriptor_,
      S1Message::default_instance_,
      S1Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S1Message));
  S1Message_MessageType_descriptor_ = S1Message_descriptor_->enum_type(0);
  S1ApInitialUeMessage_descriptor_ = file->message_type(1);
  static const int S1ApInitialUeMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialUeMessage, enb_ue_s1ap_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialUeMessage, epsattachtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialUeMessage, identity_),
  };
  S1ApInitialUeMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S1ApInitialUeMessage_descriptor_,
      S1ApInitialUeMessage::default_instance_,
      S1ApInitialUeMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialUeMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialUeMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S1ApInitialUeMessage));
  S1ApInitialContextSetupRequest_descriptor_ = file->message_type(2);
  static const int S1ApInitialContextSetupRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, mme_ue_s1ap_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, enb_ue_s1ap_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, securitykey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, epsbearerid_),
  };
  S1ApInitialContextSetupRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S1ApInitialContextSetupRequest_descriptor_,
      S1ApInitialContextSetupRequest::default_instance_,
      S1ApInitialContextSetupRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S1ApInitialContextSetupRequest));
  S1ApInitialContextSetupResponse_descriptor_ = file->message_type(3);
  static const int S1ApInitialContextSetupResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupResponse, enb_ue_s1ap_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupResponse, erabid_),
  };
  S1ApInitialContextSetupResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S1ApInitialContextSetupResponse_descriptor_,
      S1ApInitialContextSetupResponse::default_instance_,
      S1ApInitialContextSetupResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S1ApInitialContextSetupResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S1ApInitialContextSetupResponse));
  EpsAttachType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_S1Messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S1Message_descriptor_, &S1Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S1ApInitialUeMessage_descriptor_, &S1ApInitialUeMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S1ApInitialContextSetupRequest_descriptor_, &S1ApInitialContextSetupRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S1ApInitialContextSetupResponse_descriptor_, &S1ApInitialContextSetupResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_S1Messages_2eproto() {
  delete S1Message::default_instance_;
  delete S1Message_reflection_;
  delete S1ApInitialUeMessage::default_instance_;
  delete S1ApInitialUeMessage_reflection_;
  delete S1ApInitialContextSetupRequest::default_instance_;
  delete S1ApInitialContextSetupRequest_reflection_;
  delete S1ApInitialContextSetupResponse::default_instance_;
  delete S1ApInitialContextSetupResponse_reflection_;
}

void protobuf_AddDesc_S1Messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_RrcMessages_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020S1Messages.proto\032\021RrcMessages.proto\"\274\002"
    "\n\tS1Message\022+\n\013messageType\030\001 \002(\0162\026.S1Mes"
    "sage.MessageType\022.\n\017messageS1ApIUeM\030\002 \001("
    "\0132\025.S1ApInitialUeMessage\022>\n\025messageS1ApI"
    "CSRequest\030\003 \001(\0132\037.S1ApInitialContextSetu"
    "pRequest\022@\n\026messageS1ApICSResponse\030\004 \001(\013"
    "2 .S1ApInitialContextSetupResponse\"P\n\013Me"
    "ssageType\022\020\n\014TypeS1ApIUeM\020\000\022\026\n\022TypeS1ApI"
    "CSRequest\020\001\022\027\n\023TypeS1ApICSResponse\020\002\"v\n\024"
    "S1ApInitialUeMessage\022\026\n\016enb_Ue_S1Ap_Id\030\001"
    " \002(\003\022%\n\repsAttachType\030\002 \002(\0162\016.EpsAttachT"
    "ype\022\037\n\010identity\030\003 \002(\0132\r.Imsi_message\"z\n\036"
    "S1ApInitialContextSetupRequest\022\026\n\016mme_Ue"
    "_S1Ap_Id\030\001 \002(\003\022\026\n\016enb_Ue_S1Ap_Id\030\002 \002(\003\022\023"
    "\n\013securityKey\030\003 \002(\003\022\023\n\013epsBearerId\030\004 \002(\t"
    "\"I\n\037S1ApInitialContextSetupResponse\022\026\n\016e"
    "nb_Ue_S1Ap_Id\030\001 \002(\003\022\016\n\006eRabId\030\002 \002(\t*,\n\rE"
    "psAttachType\022\r\n\tEpsAttach\020\000\022\014\n\010EpsOther\020"
    "\001", 721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "S1Messages.proto", &protobuf_RegisterTypes);
  S1Message::default_instance_ = new S1Message();
  S1ApInitialUeMessage::default_instance_ = new S1ApInitialUeMessage();
  S1ApInitialContextSetupRequest::default_instance_ = new S1ApInitialContextSetupRequest();
  S1ApInitialContextSetupResponse::default_instance_ = new S1ApInitialContextSetupResponse();
  S1Message::default_instance_->InitAsDefaultInstance();
  S1ApInitialUeMessage::default_instance_->InitAsDefaultInstance();
  S1ApInitialContextSetupRequest::default_instance_->InitAsDefaultInstance();
  S1ApInitialContextSetupResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_S1Messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_S1Messages_2eproto {
  StaticDescriptorInitializer_S1Messages_2eproto() {
    protobuf_AddDesc_S1Messages_2eproto();
  }
} static_descriptor_initializer_S1Messages_2eproto_;
const ::google::protobuf::EnumDescriptor* EpsAttachType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EpsAttachType_descriptor_;
}
bool EpsAttachType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* S1Message_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S1Message_MessageType_descriptor_;
}
bool S1Message_MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const S1Message_MessageType S1Message::TypeS1ApIUeM;
const S1Message_MessageType S1Message::TypeS1ApICSRequest;
const S1Message_MessageType S1Message::TypeS1ApICSResponse;
const S1Message_MessageType S1Message::MessageType_MIN;
const S1Message_MessageType S1Message::MessageType_MAX;
const int S1Message::MessageType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int S1Message::kMessageTypeFieldNumber;
const int S1Message::kMessageS1ApIUeMFieldNumber;
const int S1Message::kMessageS1ApICSRequestFieldNumber;
const int S1Message::kMessageS1ApICSResponseFieldNumber;
#endif  // !_MSC_VER

S1Message::S1Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S1Message::InitAsDefaultInstance() {
  messages1apiuem_ = const_cast< ::S1ApInitialUeMessage*>(&::S1ApInitialUeMessage::default_instance());
  messages1apicsrequest_ = const_cast< ::S1ApInitialContextSetupRequest*>(&::S1ApInitialContextSetupRequest::default_instance());
  messages1apicsresponse_ = const_cast< ::S1ApInitialContextSetupResponse*>(&::S1ApInitialContextSetupResponse::default_instance());
}

S1Message::S1Message(const S1Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S1Message::SharedCtor() {
  _cached_size_ = 0;
  messagetype_ = 0;
  messages1apiuem_ = NULL;
  messages1apicsrequest_ = NULL;
  messages1apicsresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S1Message::~S1Message() {
  SharedDtor();
}

void S1Message::SharedDtor() {
  if (this != default_instance_) {
    delete messages1apiuem_;
    delete messages1apicsrequest_;
    delete messages1apicsresponse_;
  }
}

void S1Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S1Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S1Message_descriptor_;
}

const S1Message& S1Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_S1Messages_2eproto();
  return *default_instance_;
}

S1Message* S1Message::default_instance_ = NULL;

S1Message* S1Message::New() const {
  return new S1Message;
}

void S1Message::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    messagetype_ = 0;
    if (has_messages1apiuem()) {
      if (messages1apiuem_ != NULL) messages1apiuem_->::S1ApInitialUeMessage::Clear();
    }
    if (has_messages1apicsrequest()) {
      if (messages1apicsrequest_ != NULL) messages1apicsrequest_->::S1ApInitialContextSetupRequest::Clear();
    }
    if (has_messages1apicsresponse()) {
      if (messages1apicsresponse_ != NULL) messages1apicsresponse_->::S1ApInitialContextSetupResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S1Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .S1Message.MessageType messageType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::S1Message_MessageType_IsValid(value)) {
            set_messagetype(static_cast< ::S1Message_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_messageS1ApIUeM;
        break;
      }

      // optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messageS1ApIUeM:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messages1apiuem()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_messageS1ApICSRequest;
        break;
      }

      // optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messageS1ApICSRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messages1apicsrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_messageS1ApICSResponse;
        break;
      }

      // optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messageS1ApICSResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messages1apicsresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S1Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .S1Message.MessageType messageType = 1;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
  if (has_messages1apiuem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->messages1apiuem(), output);
  }

  // optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
  if (has_messages1apicsrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->messages1apicsrequest(), output);
  }

  // optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
  if (has_messages1apicsresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->messages1apicsresponse(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S1Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .S1Message.MessageType messageType = 1;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
  if (has_messages1apiuem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->messages1apiuem(), target);
  }

  // optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
  if (has_messages1apicsrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->messages1apicsrequest(), target);
  }

  // optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
  if (has_messages1apicsresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->messages1apicsresponse(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S1Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .S1Message.MessageType messageType = 1;
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
    }

    // optional .S1ApInitialUeMessage messageS1ApIUeM = 2;
    if (has_messages1apiuem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messages1apiuem());
    }

    // optional .S1ApInitialContextSetupRequest messageS1ApICSRequest = 3;
    if (has_messages1apicsrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messages1apicsrequest());
    }

    // optional .S1ApInitialContextSetupResponse messageS1ApICSResponse = 4;
    if (has_messages1apicsresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messages1apicsresponse());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S1Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S1Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S1Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S1Message::MergeFrom(const S1Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_messages1apiuem()) {
      mutable_messages1apiuem()->::S1ApInitialUeMessage::MergeFrom(from.messages1apiuem());
    }
    if (from.has_messages1apicsrequest()) {
      mutable_messages1apicsrequest()->::S1ApInitialContextSetupRequest::MergeFrom(from.messages1apicsrequest());
    }
    if (from.has_messages1apicsresponse()) {
      mutable_messages1apicsresponse()->::S1ApInitialContextSetupResponse::MergeFrom(from.messages1apicsresponse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S1Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S1Message::CopyFrom(const S1Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S1Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_messages1apiuem()) {
    if (!this->messages1apiuem().IsInitialized()) return false;
  }
  if (has_messages1apicsrequest()) {
    if (!this->messages1apicsrequest().IsInitialized()) return false;
  }
  if (has_messages1apicsresponse()) {
    if (!this->messages1apicsresponse().IsInitialized()) return false;
  }
  return true;
}

void S1Message::Swap(S1Message* other) {
  if (other != this) {
    std::swap(messagetype_, other->messagetype_);
    std::swap(messages1apiuem_, other->messages1apiuem_);
    std::swap(messages1apicsrequest_, other->messages1apicsrequest_);
    std::swap(messages1apicsresponse_, other->messages1apicsresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S1Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S1Message_descriptor_;
  metadata.reflection = S1Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int S1ApInitialUeMessage::kEnbUeS1ApIdFieldNumber;
const int S1ApInitialUeMessage::kEpsAttachTypeFieldNumber;
const int S1ApInitialUeMessage::kIdentityFieldNumber;
#endif  // !_MSC_VER

S1ApInitialUeMessage::S1ApInitialUeMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S1ApInitialUeMessage::InitAsDefaultInstance() {
  identity_ = const_cast< ::Imsi_message*>(&::Imsi_message::default_instance());
}

S1ApInitialUeMessage::S1ApInitialUeMessage(const S1ApInitialUeMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S1ApInitialUeMessage::SharedCtor() {
  _cached_size_ = 0;
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  epsattachtype_ = 0;
  identity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S1ApInitialUeMessage::~S1ApInitialUeMessage() {
  SharedDtor();
}

void S1ApInitialUeMessage::SharedDtor() {
  if (this != default_instance_) {
    delete identity_;
  }
}

void S1ApInitialUeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S1ApInitialUeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S1ApInitialUeMessage_descriptor_;
}

const S1ApInitialUeMessage& S1ApInitialUeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_S1Messages_2eproto();
  return *default_instance_;
}

S1ApInitialUeMessage* S1ApInitialUeMessage::default_instance_ = NULL;

S1ApInitialUeMessage* S1ApInitialUeMessage::New() const {
  return new S1ApInitialUeMessage;
}

void S1ApInitialUeMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
    epsattachtype_ = 0;
    if (has_identity()) {
      if (identity_ != NULL) identity_->::Imsi_message::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S1ApInitialUeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 enb_Ue_S1Ap_Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enb_ue_s1ap_id_)));
          set_has_enb_ue_s1ap_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_epsAttachType;
        break;
      }

      // required .EpsAttachType epsAttachType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_epsAttachType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EpsAttachType_IsValid(value)) {
            set_epsattachtype(static_cast< ::EpsAttachType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_identity;
        break;
      }

      // required .Imsi_message identity = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_identity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_identity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S1ApInitialUeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 enb_Ue_S1Ap_Id = 1;
  if (has_enb_ue_s1ap_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->enb_ue_s1ap_id(), output);
  }

  // required .EpsAttachType epsAttachType = 2;
  if (has_epsattachtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->epsattachtype(), output);
  }

  // required .Imsi_message identity = 3;
  if (has_identity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->identity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S1ApInitialUeMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 enb_Ue_S1Ap_Id = 1;
  if (has_enb_ue_s1ap_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->enb_ue_s1ap_id(), target);
  }

  // required .EpsAttachType epsAttachType = 2;
  if (has_epsattachtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->epsattachtype(), target);
  }

  // required .Imsi_message identity = 3;
  if (has_identity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->identity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S1ApInitialUeMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 enb_Ue_S1Ap_Id = 1;
    if (has_enb_ue_s1ap_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enb_ue_s1ap_id());
    }

    // required .EpsAttachType epsAttachType = 2;
    if (has_epsattachtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epsattachtype());
    }

    // required .Imsi_message identity = 3;
    if (has_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->identity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S1ApInitialUeMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S1ApInitialUeMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S1ApInitialUeMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S1ApInitialUeMessage::MergeFrom(const S1ApInitialUeMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enb_ue_s1ap_id()) {
      set_enb_ue_s1ap_id(from.enb_ue_s1ap_id());
    }
    if (from.has_epsattachtype()) {
      set_epsattachtype(from.epsattachtype());
    }
    if (from.has_identity()) {
      mutable_identity()->::Imsi_message::MergeFrom(from.identity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S1ApInitialUeMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S1ApInitialUeMessage::CopyFrom(const S1ApInitialUeMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S1ApInitialUeMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_identity()) {
    if (!this->identity().IsInitialized()) return false;
  }
  return true;
}

void S1ApInitialUeMessage::Swap(S1ApInitialUeMessage* other) {
  if (other != this) {
    std::swap(enb_ue_s1ap_id_, other->enb_ue_s1ap_id_);
    std::swap(epsattachtype_, other->epsattachtype_);
    std::swap(identity_, other->identity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S1ApInitialUeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S1ApInitialUeMessage_descriptor_;
  metadata.reflection = S1ApInitialUeMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int S1ApInitialContextSetupRequest::kMmeUeS1ApIdFieldNumber;
const int S1ApInitialContextSetupRequest::kEnbUeS1ApIdFieldNumber;
const int S1ApInitialContextSetupRequest::kSecurityKeyFieldNumber;
const int S1ApInitialContextSetupRequest::kEpsBearerIdFieldNumber;
#endif  // !_MSC_VER

S1ApInitialContextSetupRequest::S1ApInitialContextSetupRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S1ApInitialContextSetupRequest::InitAsDefaultInstance() {
}

S1ApInitialContextSetupRequest::S1ApInitialContextSetupRequest(const S1ApInitialContextSetupRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S1ApInitialContextSetupRequest::SharedCtor() {
  _cached_size_ = 0;
  mme_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  securitykey_ = GOOGLE_LONGLONG(0);
  epsbearerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S1ApInitialContextSetupRequest::~S1ApInitialContextSetupRequest() {
  SharedDtor();
}

void S1ApInitialContextSetupRequest::SharedDtor() {
  if (epsbearerid_ != &::google::protobuf::internal::kEmptyString) {
    delete epsbearerid_;
  }
  if (this != default_instance_) {
  }
}

void S1ApInitialContextSetupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S1ApInitialContextSetupRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S1ApInitialContextSetupRequest_descriptor_;
}

const S1ApInitialContextSetupRequest& S1ApInitialContextSetupRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_S1Messages_2eproto();
  return *default_instance_;
}

S1ApInitialContextSetupRequest* S1ApInitialContextSetupRequest::default_instance_ = NULL;

S1ApInitialContextSetupRequest* S1ApInitialContextSetupRequest::New() const {
  return new S1ApInitialContextSetupRequest;
}

void S1ApInitialContextSetupRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mme_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
    enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
    securitykey_ = GOOGLE_LONGLONG(0);
    if (has_epsbearerid()) {
      if (epsbearerid_ != &::google::protobuf::internal::kEmptyString) {
        epsbearerid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S1ApInitialContextSetupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 mme_Ue_S1Ap_Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mme_ue_s1ap_id_)));
          set_has_mme_ue_s1ap_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_enb_Ue_S1Ap_Id;
        break;
      }

      // required int64 enb_Ue_S1Ap_Id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enb_Ue_S1Ap_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enb_ue_s1ap_id_)));
          set_has_enb_ue_s1ap_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_securityKey;
        break;
      }

      // required int64 securityKey = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_securityKey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &securitykey_)));
          set_has_securitykey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_epsBearerId;
        break;
      }

      // required string epsBearerId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_epsBearerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_epsbearerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->epsbearerid().data(), this->epsbearerid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S1ApInitialContextSetupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 mme_Ue_S1Ap_Id = 1;
  if (has_mme_ue_s1ap_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mme_ue_s1ap_id(), output);
  }

  // required int64 enb_Ue_S1Ap_Id = 2;
  if (has_enb_ue_s1ap_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->enb_ue_s1ap_id(), output);
  }

  // required int64 securityKey = 3;
  if (has_securitykey()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->securitykey(), output);
  }

  // required string epsBearerId = 4;
  if (has_epsbearerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->epsbearerid().data(), this->epsbearerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->epsbearerid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S1ApInitialContextSetupRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 mme_Ue_S1Ap_Id = 1;
  if (has_mme_ue_s1ap_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mme_ue_s1ap_id(), target);
  }

  // required int64 enb_Ue_S1Ap_Id = 2;
  if (has_enb_ue_s1ap_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->enb_ue_s1ap_id(), target);
  }

  // required int64 securityKey = 3;
  if (has_securitykey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->securitykey(), target);
  }

  // required string epsBearerId = 4;
  if (has_epsbearerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->epsbearerid().data(), this->epsbearerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->epsbearerid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S1ApInitialContextSetupRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 mme_Ue_S1Ap_Id = 1;
    if (has_mme_ue_s1ap_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mme_ue_s1ap_id());
    }

    // required int64 enb_Ue_S1Ap_Id = 2;
    if (has_enb_ue_s1ap_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enb_ue_s1ap_id());
    }

    // required int64 securityKey = 3;
    if (has_securitykey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->securitykey());
    }

    // required string epsBearerId = 4;
    if (has_epsbearerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->epsbearerid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S1ApInitialContextSetupRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S1ApInitialContextSetupRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S1ApInitialContextSetupRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S1ApInitialContextSetupRequest::MergeFrom(const S1ApInitialContextSetupRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mme_ue_s1ap_id()) {
      set_mme_ue_s1ap_id(from.mme_ue_s1ap_id());
    }
    if (from.has_enb_ue_s1ap_id()) {
      set_enb_ue_s1ap_id(from.enb_ue_s1ap_id());
    }
    if (from.has_securitykey()) {
      set_securitykey(from.securitykey());
    }
    if (from.has_epsbearerid()) {
      set_epsbearerid(from.epsbearerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S1ApInitialContextSetupRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S1ApInitialContextSetupRequest::CopyFrom(const S1ApInitialContextSetupRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S1ApInitialContextSetupRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void S1ApInitialContextSetupRequest::Swap(S1ApInitialContextSetupRequest* other) {
  if (other != this) {
    std::swap(mme_ue_s1ap_id_, other->mme_ue_s1ap_id_);
    std::swap(enb_ue_s1ap_id_, other->enb_ue_s1ap_id_);
    std::swap(securitykey_, other->securitykey_);
    std::swap(epsbearerid_, other->epsbearerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S1ApInitialContextSetupRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S1ApInitialContextSetupRequest_descriptor_;
  metadata.reflection = S1ApInitialContextSetupRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int S1ApInitialContextSetupResponse::kEnbUeS1ApIdFieldNumber;
const int S1ApInitialContextSetupResponse::kERabIdFieldNumber;
#endif  // !_MSC_VER

S1ApInitialContextSetupResponse::S1ApInitialContextSetupResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S1ApInitialContextSetupResponse::InitAsDefaultInstance() {
}

S1ApInitialContextSetupResponse::S1ApInitialContextSetupResponse(const S1ApInitialContextSetupResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S1ApInitialContextSetupResponse::SharedCtor() {
  _cached_size_ = 0;
  enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
  erabid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S1ApInitialContextSetupResponse::~S1ApInitialContextSetupResponse() {
  SharedDtor();
}

void S1ApInitialContextSetupResponse::SharedDtor() {
  if (erabid_ != &::google::protobuf::internal::kEmptyString) {
    delete erabid_;
  }
  if (this != default_instance_) {
  }
}

void S1ApInitialContextSetupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S1ApInitialContextSetupResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S1ApInitialContextSetupResponse_descriptor_;
}

const S1ApInitialContextSetupResponse& S1ApInitialContextSetupResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_S1Messages_2eproto();
  return *default_instance_;
}

S1ApInitialContextSetupResponse* S1ApInitialContextSetupResponse::default_instance_ = NULL;

S1ApInitialContextSetupResponse* S1ApInitialContextSetupResponse::New() const {
  return new S1ApInitialContextSetupResponse;
}

void S1ApInitialContextSetupResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    enb_ue_s1ap_id_ = GOOGLE_LONGLONG(0);
    if (has_erabid()) {
      if (erabid_ != &::google::protobuf::internal::kEmptyString) {
        erabid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S1ApInitialContextSetupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 enb_Ue_S1Ap_Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enb_ue_s1ap_id_)));
          set_has_enb_ue_s1ap_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_eRabId;
        break;
      }

      // required string eRabId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_eRabId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_erabid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->erabid().data(), this->erabid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S1ApInitialContextSetupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 enb_Ue_S1Ap_Id = 1;
  if (has_enb_ue_s1ap_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->enb_ue_s1ap_id(), output);
  }

  // required string eRabId = 2;
  if (has_erabid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->erabid().data(), this->erabid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->erabid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S1ApInitialContextSetupResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 enb_Ue_S1Ap_Id = 1;
  if (has_enb_ue_s1ap_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->enb_ue_s1ap_id(), target);
  }

  // required string eRabId = 2;
  if (has_erabid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->erabid().data(), this->erabid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->erabid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S1ApInitialContextSetupResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 enb_Ue_S1Ap_Id = 1;
    if (has_enb_ue_s1ap_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enb_ue_s1ap_id());
    }

    // required string eRabId = 2;
    if (has_erabid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->erabid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S1ApInitialContextSetupResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S1ApInitialContextSetupResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S1ApInitialContextSetupResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S1ApInitialContextSetupResponse::MergeFrom(const S1ApInitialContextSetupResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enb_ue_s1ap_id()) {
      set_enb_ue_s1ap_id(from.enb_ue_s1ap_id());
    }
    if (from.has_erabid()) {
      set_erabid(from.erabid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S1ApInitialContextSetupResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S1ApInitialContextSetupResponse::CopyFrom(const S1ApInitialContextSetupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S1ApInitialContextSetupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S1ApInitialContextSetupResponse::Swap(S1ApInitialContextSetupResponse* other) {
  if (other != this) {
    std::swap(enb_ue_s1ap_id_, other->enb_ue_s1ap_id_);
    std::swap(erabid_, other->erabid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S1ApInitialContextSetupResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S1ApInitialContextSetupResponse_descriptor_;
  metadata.reflection = S1ApInitialContextSetupResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
