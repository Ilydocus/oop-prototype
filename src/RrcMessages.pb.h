// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RrcMessages.proto

#ifndef PROTOBUF_RrcMessages_2eproto__INCLUDED
#define PROTOBUF_RrcMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RrcMessages_2eproto();
void protobuf_AssignDesc_RrcMessages_2eproto();
void protobuf_ShutdownFile_RrcMessages_2eproto();

class RrcMessage;
class RaPreamble;
class RaResponse;

enum RrcMessage_MessageType {
  RrcMessage_MessageType_TypeRaPreamble = 0,
  RrcMessage_MessageType_TypeRaResponse = 1
};
bool RrcMessage_MessageType_IsValid(int value);
const RrcMessage_MessageType RrcMessage_MessageType_MessageType_MIN = RrcMessage_MessageType_TypeRaPreamble;
const RrcMessage_MessageType RrcMessage_MessageType_MessageType_MAX = RrcMessage_MessageType_TypeRaResponse;
const int RrcMessage_MessageType_MessageType_ARRAYSIZE = RrcMessage_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RrcMessage_MessageType_descriptor();
inline const ::std::string& RrcMessage_MessageType_Name(RrcMessage_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RrcMessage_MessageType_descriptor(), value);
}
inline bool RrcMessage_MessageType_Parse(
    const ::std::string& name, RrcMessage_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RrcMessage_MessageType>(
    RrcMessage_MessageType_descriptor(), name, value);
}
enum UeIdRntiType {
  RA_RNTI = 0,
  C_RNTI = 1
};
bool UeIdRntiType_IsValid(int value);
const UeIdRntiType UeIdRntiType_MIN = RA_RNTI;
const UeIdRntiType UeIdRntiType_MAX = C_RNTI;
const int UeIdRntiType_ARRAYSIZE = UeIdRntiType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UeIdRntiType_descriptor();
inline const ::std::string& UeIdRntiType_Name(UeIdRntiType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UeIdRntiType_descriptor(), value);
}
inline bool UeIdRntiType_Parse(
    const ::std::string& name, UeIdRntiType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UeIdRntiType>(
    UeIdRntiType_descriptor(), name, value);
}
// ===================================================================

class RrcMessage : public ::google::protobuf::Message {
 public:
  RrcMessage();
  virtual ~RrcMessage();

  RrcMessage(const RrcMessage& from);

  inline RrcMessage& operator=(const RrcMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RrcMessage& default_instance();

  void Swap(RrcMessage* other);

  // implements Message ----------------------------------------------

  RrcMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RrcMessage& from);
  void MergeFrom(const RrcMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RrcMessage_MessageType MessageType;
  static const MessageType TypeRaPreamble = RrcMessage_MessageType_TypeRaPreamble;
  static const MessageType TypeRaResponse = RrcMessage_MessageType_TypeRaResponse;
  static inline bool MessageType_IsValid(int value) {
    return RrcMessage_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    RrcMessage_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    RrcMessage_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    RrcMessage_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return RrcMessage_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return RrcMessage_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return RrcMessage_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .RrcMessage.MessageType messageType = 1;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  inline ::RrcMessage_MessageType messagetype() const;
  inline void set_messagetype(::RrcMessage_MessageType value);

  // optional .RaPreamble messageRaP = 2;
  inline bool has_messagerap() const;
  inline void clear_messagerap();
  static const int kMessageRaPFieldNumber = 2;
  inline const ::RaPreamble& messagerap() const;
  inline ::RaPreamble* mutable_messagerap();
  inline ::RaPreamble* release_messagerap();
  inline void set_allocated_messagerap(::RaPreamble* messagerap);

  // optional .RaResponse messageRaR = 3;
  inline bool has_messagerar() const;
  inline void clear_messagerar();
  static const int kMessageRaRFieldNumber = 3;
  inline const ::RaResponse& messagerar() const;
  inline ::RaResponse* mutable_messagerar();
  inline ::RaResponse* release_messagerar();
  inline void set_allocated_messagerar(::RaResponse* messagerar);

  // @@protoc_insertion_point(class_scope:RrcMessage)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_messagerap();
  inline void clear_has_messagerap();
  inline void set_has_messagerar();
  inline void clear_has_messagerar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RaPreamble* messagerap_;
  ::RaResponse* messagerar_;
  int messagetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RrcMessages_2eproto();
  friend void protobuf_AssignDesc_RrcMessages_2eproto();
  friend void protobuf_ShutdownFile_RrcMessages_2eproto();

  void InitAsDefaultInstance();
  static RrcMessage* default_instance_;
};
// -------------------------------------------------------------------

class RaPreamble : public ::google::protobuf::Message {
 public:
  RaPreamble();
  virtual ~RaPreamble();

  RaPreamble(const RaPreamble& from);

  inline RaPreamble& operator=(const RaPreamble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaPreamble& default_instance();

  void Swap(RaPreamble* other);

  // implements Message ----------------------------------------------

  RaPreamble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaPreamble& from);
  void MergeFrom(const RaPreamble& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UeIdRntiType ueIdRntiType = 1;
  inline bool has_ueidrntitype() const;
  inline void clear_ueidrntitype();
  static const int kUeIdRntiTypeFieldNumber = 1;
  inline ::UeIdRntiType ueidrntitype() const;
  inline void set_ueidrntitype(::UeIdRntiType value);

  // required int64 ueIdRntiValue = 2;
  inline bool has_ueidrntivalue() const;
  inline void clear_ueidrntivalue();
  static const int kUeIdRntiValueFieldNumber = 2;
  inline ::google::protobuf::int64 ueidrntivalue() const;
  inline void set_ueidrntivalue(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RaPreamble)
 private:
  inline void set_has_ueidrntitype();
  inline void clear_has_ueidrntitype();
  inline void set_has_ueidrntivalue();
  inline void clear_has_ueidrntivalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ueidrntivalue_;
  int ueidrntitype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RrcMessages_2eproto();
  friend void protobuf_AssignDesc_RrcMessages_2eproto();
  friend void protobuf_ShutdownFile_RrcMessages_2eproto();

  void InitAsDefaultInstance();
  static RaPreamble* default_instance_;
};
// -------------------------------------------------------------------

class RaResponse : public ::google::protobuf::Message {
 public:
  RaResponse();
  virtual ~RaResponse();

  RaResponse(const RaResponse& from);

  inline RaResponse& operator=(const RaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaResponse& default_instance();

  void Swap(RaResponse* other);

  // implements Message ----------------------------------------------

  RaResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaResponse& from);
  void MergeFrom(const RaResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UeIdRntiType ueIdRntiType = 1;
  inline bool has_ueidrntitype() const;
  inline void clear_ueidrntitype();
  static const int kUeIdRntiTypeFieldNumber = 1;
  inline ::UeIdRntiType ueidrntitype() const;
  inline void set_ueidrntitype(::UeIdRntiType value);

  // required int64 ueIdRntiValue = 2;
  inline bool has_ueidrntivalue() const;
  inline void clear_ueidrntivalue();
  static const int kUeIdRntiValueFieldNumber = 2;
  inline ::google::protobuf::int64 ueidrntivalue() const;
  inline void set_ueidrntivalue(::google::protobuf::int64 value);

  // required int64 ueIdCRnti = 3;
  inline bool has_ueidcrnti() const;
  inline void clear_ueidcrnti();
  static const int kUeIdCRntiFieldNumber = 3;
  inline ::google::protobuf::int64 ueidcrnti() const;
  inline void set_ueidcrnti(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RaResponse)
 private:
  inline void set_has_ueidrntitype();
  inline void clear_has_ueidrntitype();
  inline void set_has_ueidrntivalue();
  inline void clear_has_ueidrntivalue();
  inline void set_has_ueidcrnti();
  inline void clear_has_ueidcrnti();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ueidrntivalue_;
  ::google::protobuf::int64 ueidcrnti_;
  int ueidrntitype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RrcMessages_2eproto();
  friend void protobuf_AssignDesc_RrcMessages_2eproto();
  friend void protobuf_ShutdownFile_RrcMessages_2eproto();

  void InitAsDefaultInstance();
  static RaResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// RrcMessage

// required .RrcMessage.MessageType messageType = 1;
inline bool RrcMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RrcMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RrcMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RrcMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::RrcMessage_MessageType RrcMessage::messagetype() const {
  return static_cast< ::RrcMessage_MessageType >(messagetype_);
}
inline void RrcMessage::set_messagetype(::RrcMessage_MessageType value) {
  assert(::RrcMessage_MessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
}

// optional .RaPreamble messageRaP = 2;
inline bool RrcMessage::has_messagerap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RrcMessage::set_has_messagerap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RrcMessage::clear_has_messagerap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RrcMessage::clear_messagerap() {
  if (messagerap_ != NULL) messagerap_->::RaPreamble::Clear();
  clear_has_messagerap();
}
inline const ::RaPreamble& RrcMessage::messagerap() const {
  return messagerap_ != NULL ? *messagerap_ : *default_instance_->messagerap_;
}
inline ::RaPreamble* RrcMessage::mutable_messagerap() {
  set_has_messagerap();
  if (messagerap_ == NULL) messagerap_ = new ::RaPreamble;
  return messagerap_;
}
inline ::RaPreamble* RrcMessage::release_messagerap() {
  clear_has_messagerap();
  ::RaPreamble* temp = messagerap_;
  messagerap_ = NULL;
  return temp;
}
inline void RrcMessage::set_allocated_messagerap(::RaPreamble* messagerap) {
  delete messagerap_;
  messagerap_ = messagerap;
  if (messagerap) {
    set_has_messagerap();
  } else {
    clear_has_messagerap();
  }
}

// optional .RaResponse messageRaR = 3;
inline bool RrcMessage::has_messagerar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RrcMessage::set_has_messagerar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RrcMessage::clear_has_messagerar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RrcMessage::clear_messagerar() {
  if (messagerar_ != NULL) messagerar_->::RaResponse::Clear();
  clear_has_messagerar();
}
inline const ::RaResponse& RrcMessage::messagerar() const {
  return messagerar_ != NULL ? *messagerar_ : *default_instance_->messagerar_;
}
inline ::RaResponse* RrcMessage::mutable_messagerar() {
  set_has_messagerar();
  if (messagerar_ == NULL) messagerar_ = new ::RaResponse;
  return messagerar_;
}
inline ::RaResponse* RrcMessage::release_messagerar() {
  clear_has_messagerar();
  ::RaResponse* temp = messagerar_;
  messagerar_ = NULL;
  return temp;
}
inline void RrcMessage::set_allocated_messagerar(::RaResponse* messagerar) {
  delete messagerar_;
  messagerar_ = messagerar;
  if (messagerar) {
    set_has_messagerar();
  } else {
    clear_has_messagerar();
  }
}

// -------------------------------------------------------------------

// RaPreamble

// required .UeIdRntiType ueIdRntiType = 1;
inline bool RaPreamble::has_ueidrntitype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RaPreamble::set_has_ueidrntitype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RaPreamble::clear_has_ueidrntitype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RaPreamble::clear_ueidrntitype() {
  ueidrntitype_ = 0;
  clear_has_ueidrntitype();
}
inline ::UeIdRntiType RaPreamble::ueidrntitype() const {
  return static_cast< ::UeIdRntiType >(ueidrntitype_);
}
inline void RaPreamble::set_ueidrntitype(::UeIdRntiType value) {
  assert(::UeIdRntiType_IsValid(value));
  set_has_ueidrntitype();
  ueidrntitype_ = value;
}

// required int64 ueIdRntiValue = 2;
inline bool RaPreamble::has_ueidrntivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RaPreamble::set_has_ueidrntivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RaPreamble::clear_has_ueidrntivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RaPreamble::clear_ueidrntivalue() {
  ueidrntivalue_ = GOOGLE_LONGLONG(0);
  clear_has_ueidrntivalue();
}
inline ::google::protobuf::int64 RaPreamble::ueidrntivalue() const {
  return ueidrntivalue_;
}
inline void RaPreamble::set_ueidrntivalue(::google::protobuf::int64 value) {
  set_has_ueidrntivalue();
  ueidrntivalue_ = value;
}

// -------------------------------------------------------------------

// RaResponse

// required .UeIdRntiType ueIdRntiType = 1;
inline bool RaResponse::has_ueidrntitype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RaResponse::set_has_ueidrntitype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RaResponse::clear_has_ueidrntitype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RaResponse::clear_ueidrntitype() {
  ueidrntitype_ = 0;
  clear_has_ueidrntitype();
}
inline ::UeIdRntiType RaResponse::ueidrntitype() const {
  return static_cast< ::UeIdRntiType >(ueidrntitype_);
}
inline void RaResponse::set_ueidrntitype(::UeIdRntiType value) {
  assert(::UeIdRntiType_IsValid(value));
  set_has_ueidrntitype();
  ueidrntitype_ = value;
}

// required int64 ueIdRntiValue = 2;
inline bool RaResponse::has_ueidrntivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RaResponse::set_has_ueidrntivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RaResponse::clear_has_ueidrntivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RaResponse::clear_ueidrntivalue() {
  ueidrntivalue_ = GOOGLE_LONGLONG(0);
  clear_has_ueidrntivalue();
}
inline ::google::protobuf::int64 RaResponse::ueidrntivalue() const {
  return ueidrntivalue_;
}
inline void RaResponse::set_ueidrntivalue(::google::protobuf::int64 value) {
  set_has_ueidrntivalue();
  ueidrntivalue_ = value;
}

// required int64 ueIdCRnti = 3;
inline bool RaResponse::has_ueidcrnti() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RaResponse::set_has_ueidcrnti() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RaResponse::clear_has_ueidcrnti() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RaResponse::clear_ueidcrnti() {
  ueidcrnti_ = GOOGLE_LONGLONG(0);
  clear_has_ueidcrnti();
}
inline ::google::protobuf::int64 RaResponse::ueidcrnti() const {
  return ueidcrnti_;
}
inline void RaResponse::set_ueidcrnti(::google::protobuf::int64 value) {
  set_has_ueidcrnti();
  ueidcrnti_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RrcMessage_MessageType>() {
  return ::RrcMessage_MessageType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UeIdRntiType>() {
  return ::UeIdRntiType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RrcMessages_2eproto__INCLUDED
